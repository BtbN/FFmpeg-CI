name: 'Docker Image Cache Save'
description: 'Save Docker images to cache and cleanup tar helper'

inputs:
  cache-key:
    description: 'Cache key prefix'
    required: false
    default: 'docker-image-cache'
  matched-key:
    description: 'The matched key of the corresponding restore action'
    required: false
    default: ''
outputs:
  cache-key:
    description: 'The key generated for the cache'
    value: ${{ steps.docker_cache_key.outputs.key }}

runs:
  using: 'composite'
  steps:
    - name: Install Tar-Helper
      shell: sudo install -o root -m 755 {0} /usr/local/bin/tar
      run: |
        #!/bin/bash
        set -euo pipefail
        outf=""
        cmpr="gzip"
        args=("$@")
        for ((i=0; i<${#args[@]}; i++)); do
          arg="${args[i]}"
          case "$arg" in
            --use-compress-program)
              cmpr="${args[i+1]}"
              ;;
            --use-compress-program=*)
              cmpr="${arg#*=}"
              ;;
            -[a-zA-Z]*)
              if [[ "$arg" == *f* ]]; then
                outf="${args[i+1]}"
              fi
              ;;
          esac
        done
        set -x
        docker image save $(docker image ls --format '{{.Repository}}:{{.Tag}}' | grep -v '<none>') | "$cmpr" > "$outf"
    - name: Prune System
      shell: bash
      run: docker system prune -f
    - name: Get Docker Images Cache-Key
      id: docker_cache_key
      shell: bash
      run: |
        echo "key=$(docker image ls --format '{{.ID}} {{.Repository}}:{{.Tag}}' | grep -v '<none>' | cut -d' ' -f 1 | sort | sha1sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT
        echo "have=$(docker image ls --format '{{.Repository}}:{{.Tag}}' | grep -v '<none>' >/dev/null 2>&1 && echo 1 || echo 0)" >> $GITHUB_OUTPUT
    - name: Save Docker Cache
      uses: actions/cache/save@v4
      if: format('{0}-{1}', inputs.cache-key, steps.docker_cache_key.outputs.key) != inputs.matched-key && steps.docker_cache_key.outputs.have == '1'
      with:
        key: ${{ inputs.cache-key }}-${{ steps.docker_cache_key.outputs.key }}
        path: .
    - name: Remove Tar-Helper
      shell: bash
      run: sudo rm /usr/local/bin/tar
